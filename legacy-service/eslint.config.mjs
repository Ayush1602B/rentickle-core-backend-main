import { FlatCompat } from '@eslint/eslintrc'
import typescriptEslintPlugin from '@typescript-eslint/eslint-plugin'
import eslintPluginPrettier from 'eslint-plugin-prettier'

const compat = new FlatCompat({
  baseDirectory: import.meta.url,
  resolvePluginsRelativeTo: import.meta.url,
})

const esconfig = [
  ...compat.extends(
    ...['plugin:@typescript-eslint/recommended', 'plugin:prettier/recommended'],
  ),
  {
    files: ['**/*.ts', '**/*.tsx'],
    ignores: ['.eslintrc.js', 'dist', 'test', '*.js', 'node_modules'],
    plugins: {
      '@typescript-eslint': typescriptEslintPlugin,
      prettier: eslintPluginPrettier,
    },
    rules: {
      '@typescript-eslint/interface-name-prefix': 'off',
      '@typescript-eslint/explicit-function-return-type': 'off',
      '@typescript-eslint/explicit-module-boundary-types': 'off',
      '@typescript-eslint/no-explicit-any': 'off',
      'prettier/prettier': [
        'error',
        {
          singleQuote: true,
          semi: false,
          trailingComma: 'all',
        },
      ],
      'arrow-body-style': 'off',
      'no-duplicate-imports': 'error',
      'no-self-compare': 'error',
      complexity: ['error', 40],
      curly: 'error',
      'default-case': 'error',
      'dot-notation': 'error',
      eqeqeq: 'error',
      'func-names': 'off',
      'guard-for-in': 'error',
      'max-lines': ['error', { max: 1500, skipComments: true }],
      'max-params': 'off',
      'multiline-comment-style': ['error', 'separate-lines'],
      'no-alert': 'error',
      'no-console': 'warn',
      'no-delete-var': 'off',
      'no-bitwise': 'error',
      'no-eq-null': 'error',
      'no-eval': 'error',
      'no-extra-bind': 'error',
      'no-floating-decimal': 'error',
      'no-implicit-coercion': 'error',
      'no-invalid-this': 'error',
      'no-iterator': 'error',
      'no-lone-blocks': 'error',
      'no-loop-func': 'error',
      'no-mixed-operators': 'off',
      'no-new': 'error',
      'no-new-func': 'error',
      'no-new-object': 'error',
      'no-new-wrappers': 'error',
      'no-plusplus': 'error',
      'no-proto': 'error',
      'no-return-assign': 'error',
      'no-return-await': 'error',
      'no-throw-literal': 'error',
      'no-undef-init': 'error',
      'no-unused-expressions': 'error',
      'no-useless-computed-key': 'error',
      'no-useless-concat': 'error',
      'no-useless-return': 'error',
      'no-var': 'error',
      'prefer-arrow-callback': 'error',
      'prefer-const': 'error',
      'prefer-promise-reject-errors': 'error',
      'require-await': 'error',
      'spaced-comment': ['error', 'always', { exceptions: ['-'] }],
      'arrow-spacing': 'error',
      'block-spacing': 'error',
      'eol-last': ['error', 'always'],
      'max-len': [
        'error',
        { code: 120, ignoreStrings: true, ignoreComments: true },
      ],
      'newline-per-chained-call': ['error', { ignoreChainWithDepth: 4 }],
      'no-multi-spaces': 'error',
      'no-tabs': ['error', { allowIndentationTabs: true }],
      quotes: ['error', 'single'],
      'rest-spread-spacing': ['error', 'never'],
      'switch-colon-spacing': 'error',
      'no-unused-vars': 'off',
      'no-redeclare': 'off',
      '@typescript-eslint/no-unused-vars': ['error'],
      '@typescript-eslint/no-redeclare': ['error'],
    },
  },
]

export default esconfig
